function extractContactPropertyMultiple(
  data: (string | number | boolean)[][],
  label: string,
  property: "name" | "title" | "email" | "phone"
): string {
  const matches: string[] = [];
  const labelNormalized = label.toLowerCase().trim();
  let isReading = false;

  for (let i = 0; i < data.length; i++) {
    const row = data[i];
    const cellLabel = (row[0] ?? '').toString().toLowerCase().trim();

    // Start of new contact group
    if (cellLabel === labelNormalized) {
      isReading = true;
    } else if (cellLabel && cellLabel !== '') {
      // New label found, stop reading contacts
      if (isReading) break;
    }

    if (isReading) {
      let value = "";
      switch (property) {
        case "name":
          value = (row[1] ?? '').toString().trim();
          break;
        case "title":
          value = (row[2] ?? '').toString().trim();
          break;
        case "email":
          value = (row[3] ?? '').toString().trim();
          break;
        case "phone":
          value = (row[4] ?? '').toString().trim();
          break;
      }
      if (value) {
        matches.push(value);
      }
    }
  }

  return matches.length ? matches.join(", ") : "";
}
